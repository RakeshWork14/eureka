# Creating a deployment file to deploy on test environment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: i27-eureka-tst
spec:
  replicas: 1
  selector:
    matchLabels:
      name: i27-eureka-tst
  template: 
    imagePullSecrets: 
      - name: docker-secret  #same name you created "docker-registry secret" under test namespace
    metadata:
      labels:
        name: i27-eureka-tst
    spec: 
      containers:
      - name: i27-eureka-tst
        image: DIT  # Docker image tag will replaces by shared libraries

---
apiVersion: v1
kind: Service
metadata:
  name: i27-eureka-tst-svc
spec:
  selector: 
    name: i27-eureka-tst #this name matches with the above matadata->labelname, otherwise it won't create the endpoint
  ports:
    - protocol: TCP
      port: 80      # This is service port, any port you need
      targetPort: 8761  # Same as your application port
  type: ClusterIP    

---
# creating a ingress for your domain (domainname= cart.rakesh.tst.com)

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: eureka-tst-ingress
  namespace: default
spec:
  rules:
    - host: cart.rakesh.tst.com  # ip's changing so we created domain name and using that domain name here and paste this name for application.yaml
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: i27-eureka-tst-svc  # Correct service name
                port:
                  number: 80   
    

      